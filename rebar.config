{erl_opts, [debug_info, warn_export_vars, warn_shadow_vars, warn_obsolete_guard]}.
{shell, [{config, "config/wok.config"}]}.

{plugins, [
           {rebar3_elixir, "~> 0.1.1"},
           rebar3_lint
          ]}.
{elixir_version, "~> 1.2"}.
{elixir_bindings, [{wok, [{except, [state]}]},
                   {wok_message_handler, [{except, [get_uuid
                                                    , get_to
                                                    , get_from
                                                    , get_headers
                                                    , get_body
                                                    , get_params
                                                    , get_topic
                                                    , get_partition]}]},
                   {wok_message, [{except, [new
                                            , new_req
                                            , build_event_message
                                            , set_params
                                            , set_action
                                            , set_to
                                            , set_global_state
                                            , set_local_state
                                            , get_local_state
                                            , get_response]}]},
                   {wok_producer, [{except, [start]}]}]}.

{deps, [
  {lager, "~> 3.2.0"},
  {lager_json_formatter, "~> 0.2.1"},
  %{kafe, "~> 2.1.6"},
  {kafe, {git, "https://github.com/botsunit/kafe.git", {branch, "all_in_one"}}},
  {bucs, "~> 1.0.4"},
  {doteki, "~> 1.0.3"},
  {uuid, {git, "https://github.com/botsunit/erlang-uuid.git", {tag, "0.7.1"}}},
  {metrics, "~> 2.2.0"}
 ]}.


{eunit_opts, [no_tty, {report, {unite_compact, [profile]}}]}.
{cover_enabled, true}.

{pre_hooks, [{eunit, "mkdir -p test/eunit"}]}.

{profiles, [
            {test, [
                    {deps, [
                            meck,
                            {unite, "", {git, "git://github.com/basho/unite.git"}}
                           ]}
                   ]},
            {dev_metrics, [
                   {deps, [
                           {folsom, "~> 0.8.3"}
                          ]}
                  ]},
            {docs, [
                    {deps, [
                            {edown, {git, "https://github.com/botsunit/edown.git", {branch, "master"}}}
                           ]},
                    {edoc_opts, [
                                 {doclet, edown_doclet}
                                 , {app_default, "http://www.erlang.org/doc/man"}
                                 , {source_path, ["src"]}
                                 , {overview, "overview.edoc"}
                                 , {stylesheet, ""}
                                 , {image, ""}
                                 , {edown_target, gitlab}
                                 , {top_level_readme, {"./README.md", "https://gitlab.botsunit.com/msaas/wok"}}
                                ]}
                   ]},
            {release, [
                       {elvis, [
                        #{dirs => ["."],
                          filter => "rebar.config",
                          rules => [{elvis_project, no_deps_master_rebar, []}]}]}
                      ]}
           ]}.

{xref_warnings,false}.
{xref_extra_paths,[]}.
{xref_checks,[undefined_function_calls, undefined_functions, locals_not_used,
              deprecated_function_calls, deprecated_functions]}.

{elvis,
   [#{dirs => ["src", "test"],
      filter => "*.erl",
      rules => [{elvis_style, line_length, #{limit => 180}},
                {elvis_style, no_tabs},
                {elvis_style, no_trailing_whitespace},
                {elvis_style, macro_names},
                {elvis_style, macro_module_names},
                {elvis_style, dont_repeat_yourself, #{min_complexity => 25}},
                {elvis_style, operator_spaces, #{rules => [{right, ","},
                                                           {right, "++"},
                                                           {left, "++"}]}}]}]}.

